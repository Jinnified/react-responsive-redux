{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","dispatch","fakeWidth","other","values","deviceWidth","width","children","responsiveWrapper","state","responsive","PhoneScreen","maxWidth","phone","TabletScreen","query","tablet","DesktopScreen","minWidth","MobileScreen","PhoneScreenHidden","TabletScreenHidden","DesktopScreenHidden","MobileScreenHidden"],"mappings":";;;;;;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;6NAJA;;;AAMA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AACxC;AADwC,MAEhCC,QAFgC,GAEED,KAFF,CAEhCC,QAFgC;AAAA,MAEtBC,SAFsB,GAEEF,KAFF,CAEtBE,SAFsB;AAAA,MAERC,KAFQ,4BAEEH,KAFF;;AAGxC,MAAMI,SAAS,EAAEC,aAAaH,SAAf,EAA0BI,OAAOJ,SAAjC,EAAf;AACA,SACE;AAAA;AAAA,iBAAgBC,KAAhB,EAA2B,EAACC,cAAD,EAA3B;AACGJ,UAAMO;AADT,GADF;AAKD,CATD;;AAWO,IAAMC,gDAAoB,SAApBA,iBAAoB;AAAA,MAACR,KAAD,uEAAS,EAAT;AAAA,SAAgB,yBAAQ;AAAA,sBAAYE,WAAWO,MAAMC,UAAN,CAAiBR,SAAxC,IAAsDF,KAAtD;AAAA,GAAR,EAAwED,iBAAxE,CAAhB;AAAA,CAA1B;;AAEA,IAAMY,oCAAcH,kBAAkB,EAAEI,UAAU,sBAAYC,KAAxB,EAAlB,CAApB;AACA,IAAMC,sCAAeN,kBAAkB,EAAEO,yBAAsB,sBAAYF,KAAZ,GAAoB,CAA1C,6BAAkE,sBAAYG,MAA9E,QAAF,EAAlB,CAArB;AACA,IAAMC,wCAAgBT,kBAAkB,EAAEU,UAAU,sBAAYF,MAAZ,GAAqB,CAAjC,EAAlB,CAAtB;AACA,IAAMG,sCAAgBX,kBAAkB,EAAEI,UAAU,sBAAYI,MAAxB,EAAlB,CAAtB;;AAEA,IAAMI,gDAAoBZ,kBAAkB,EAAEU,UAAU,sBAAYL,KAAZ,GAAoB,CAAhC,EAAlB,CAA1B;AACA,IAAMQ,kDAAqBb,kBAAkB,EAAEO,wBAAsB,sBAAYF,KAAlC,4BAA6D,sBAAYG,MAAZ,GAAqB,CAAlF,SAAF,EAAlB,CAA3B;AACA,IAAMM,oDAAsBd,kBAAkB,EAAEI,UAAU,sBAAYI,MAAxB,EAAlB,CAA5B;AACA,IAAMO,kDAAqBf,kBAAkB,EAAEU,UAAU,sBAAYF,MAAZ,GAAqB,CAAjC,EAAlB,CAA3B","file":"components.js","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport MediaQuery from 'react-responsive'\nimport { connect } from 'react-redux'\nimport { breakPoints } from './defaults'\n\nconst MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { dispatch, fakeWidth, ...other } = props\n  const values = { deviceWidth: fakeWidth, width: fakeWidth }\n  return (\n    <MediaQuery {...other} {...{values}} >\n      {props.children}\n    </MediaQuery>\n  )\n}\n\nexport const responsiveWrapper = (props = {}) => connect(state => ({ fakeWidth: state.responsive.fakeWidth, ...props }))(MediaQueryWrapper)\n\nexport const PhoneScreen = responsiveWrapper({ maxWidth: breakPoints.phone })\nexport const TabletScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.phone + 1}px) and (max-width: ${breakPoints.tablet}px)` })\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.tablet + 1 })\nexport const MobileScreen =  responsiveWrapper({ maxWidth: breakPoints.tablet })\n\nexport const PhoneScreenHidden = responsiveWrapper({ minWidth: breakPoints.phone + 1 })\nexport const TabletScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.phone}px) or (min-width: ${breakPoints.tablet + 1}px)` })\nexport const DesktopScreenHidden = responsiveWrapper({ maxWidth: breakPoints.tablet })\nexport const MobileScreenHidden = responsiveWrapper({ minWidth: breakPoints.tablet + 1 })\n"]}