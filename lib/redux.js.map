{"version":3,"sources":["../src/redux.js"],"names":["SET_MOBILE_DETECT","setMobileDetect","phone","tablet","mobile","desktop","type","buildReducer","sizes","defaultSizes","defaultSize","initialState","fakeWidth","state","action","actions"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,oBAAoB,4CAA1B;;AAEO,IAAMC,4CAAkB,SAAlBA,eAAkB;AAAA,iFAAsC,EAAtC;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,MAAV,QAAUA,MAAV;AAAA,MAAkBC,MAAlB,QAAkBA,MAAlB;AAAA,MAA0BC,OAA1B,QAA0BA,OAA1B;;AAAA,SAA8C,EAAEC,MAAMN,iBAAR,EAA2BE,YAA3B,EAAkCC,cAAlC,EAA0CC,cAA1C,EAAkDC,gBAAlD,EAA9C;AAAA,CAAxB;;AAEA,IAAME,sCAAe,SAAfA,YAAe,QAA2D;AAAA,0BAAxDC,KAAwD;AAAA,MAAxDA,KAAwD,+BAAhDC,YAAgD;AAAA,gCAAlCC,WAAkC;AAAA,MAAlCA,WAAkC,qCAApBF,MAAMH,OAAc;;AACrF,MAAMM,eAAe;AACnBT,WAAO,KADY;AAEnBC,YAAQ,KAFW;AAGnBC,YAAQ,KAHW;AAInBQ,eAAWF;AAJQ,GAArB;;AAOA,SAAO,YAAkC;AAAA,QAAjCG,KAAiC,uEAAzBF,YAAyB;AAAA,QAAXG,MAAW;;AACvC,YAAQA,OAAOR,IAAf;AACE,WAAKS,QAAQf,iBAAb;AAAgC;AAAA,yBACae,OADb;AAAA,cACtBX,MADsB,YACtBA,MADsB;AAAA,cACdD,MADc,YACdA,MADc;AAAA,cACND,KADM,YACNA,KADM;AAAA,cACCG,OADD,YACCA,OADD;;;AAG9B,cAAIO,kBAAJ;AACA,cAAIR,MAAJ,EAAY;AACV,gBAAIF,KAAJ,EAAW;AACTU,0BAAY,sBAAYV,KAAxB;AACD,aAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBS,0BAAa,sBAAYT,MAAzB;AACD,aAFM,MAEA;AACL;AACAS,0BAAY,sBAAYV,KAAxB;AACD;AACF,WATD,MASO;AACLU,wBAAY,sBAAYT,MAAZ,GAAqB,CAAjC;AACD;AACD,8BAAYU,KAAZ,IAAmBT,cAAnB,EAA2BD,cAA3B,EAAmCD,YAAnC,EAA0CG,gBAA1C,EAAmDO,oBAAnD;AACD;AACD;AACE,eAAOC,KAAP;AApBJ;AAsBD,GAvBD;AAwBD,CAhCM","file":"redux.js","sourcesContent":["import { breakPoints } from './defaults'\n\nconst SET_MOBILE_DETECT = '@@react-responsive-redux/SET_MOBILE_DETECT'\n\nexport const setMobileDetect = ({ phone, tablet, mobile, desktop } = {}) => ({ type: SET_MOBILE_DETECT, phone, tablet, mobile, desktop })\n\nexport const buildReducer = ({ sizes = defaultSizes, defaultSize = sizes.desktop }) => {\n  const initialState = {\n    phone: false,\n    tablet: false,\n    mobile: false,\n    fakeWidth: defaultSize,\n  }\n\n  return (state = initialState, action) => {\n    switch (action.type) {\n      case actions.SET_MOBILE_DETECT: {\n        const { mobile, tablet, phone, desktop } = actions\n\n        let fakeWidth\n        if (mobile) {\n          if (phone) {\n            fakeWidth = breakPoints.phone\n          } else if (tablet) {\n            fakeWidth =  breakPoints.tablet\n          } else {\n            // TODO - should we ever get here? default to the lowest value i guess\n            fakeWidth = breakPoints.phone\n          }\n        } else {\n          fakeWidth = breakPoints.tablet + 1\n        }\n        return { ...state, mobile, tablet, phone, desktop, fakeWidth }\n      }\n      default:\n        return state\n    }\n  }\n}\n"]}