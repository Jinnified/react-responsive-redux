{"version":3,"sources":["../src/redux.js"],"names":["breakPoints","SET_MOBILE_DETECT","setMobileDetect","phone","tablet","mobile","desktop","type","defaultSize","initialState","fakeWidth","reducer","state","action"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,YAA5B;;AAEA,OAAO,IAAMC,oBAAoB,4CAA1B;;AAEP,OAAO,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,iFAAsC,EAAtC;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,MAAV,QAAUA,MAAV;AAAA,MAAkBC,MAAlB,QAAkBA,MAAlB;AAAA,MAA0BC,OAA1B,QAA0BA,OAA1B;;AAAA,SAA8C;AAC3EC,UAAMN,iBADqE,EAClDE,YADkD,EAC3CC,cAD2C,EACnCC,cADmC,EAC3BC;AAD2B,GAA9C;AAAA,CAAxB;;AAIP;AACA;;AAEA;AACA,OAAO,IAAME,cAAcR,YAAYI,MAAZ,GAAqB,CAAzC;;AAEP,OAAO,IAAMK,eAAe;AAC1BN,SAAO,KADmB;AAE1BC,UAAQ,KAFkB;AAG1BC,UAAQ,KAHkB;AAI1BC,WAAS,KAJiB;AAK1BI,aAAWF;AALe,CAArB;;AAQP,OAAO,IAAMG,UAAU,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,OAAON,IAAf;AACA,SAAKN,iBAAL;AAAwB;AACtB;AADsB,gDAE0BQ,YAF1B,EAE2CI,MAF3C;AAAA,YAEdR,MAFc,wBAEdA,MAFc;AAAA,YAEND,MAFM,wBAENA,MAFM;AAAA,YAEED,KAFF,wBAEEA,KAFF;AAAA,YAESG,OAFT,wBAESA,OAFT;;AAItB,YAAII,kBAAJ;;AAEA,YAAIL,MAAJ,EAAY;AACV,cAAIF,KAAJ,EAAW;AACTO,wBAAYV,YAAYG,KAAxB;AACD,WAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBM,wBAAYV,YAAYI,MAAxB;AACD,WAFM,MAEA;AACL;AACAM,wBAAYV,YAAYG,KAAxB;AACD;AACF,SATD,MASO,IAAIG,OAAJ,EAAa;AAClBI,sBAAYV,YAAYI,MAAZ,GAAqB,CAAjC;AACD,SAFM,MAEA;AACL;AACAM,sBAAYF,WAAZ;AACD;;AAED,4BAAYI,KAAZ,IAAmBP,cAAnB,EAA2BD,cAA3B,EAAmCD,YAAnC,EAA0CG,gBAA1C,EAAmDI,oBAAnD;AACD;AACD;AACE,aAAOE,KAAP;AA1BF;AA4BD,CA7BM","file":"redux.js","sourcesContent":["import { breakPoints } from './defaults'\n\nexport const SET_MOBILE_DETECT = '@@react-responsive-redux/SET_MOBILE_DETECT'\n\nexport const setMobileDetect = ({ phone, tablet, mobile, desktop } = {}) => ({\n  type: SET_MOBILE_DETECT, phone, tablet, mobile, desktop,\n})\n\n// TODO - allow users to pass this in - we have to share it with our components\n// too though so maybe we need a getter/setter on our entire class?\n\n// default to a desktop size if in doubt\nexport const defaultSize = breakPoints.tablet + 1\n\nexport const initialState = {\n  phone: false,\n  tablet: false,\n  mobile: false,\n  desktop: false,\n  fakeWidth: defaultSize,\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SET_MOBILE_DETECT: {\n    // use initialState as the default values\n    const { mobile, tablet, phone, desktop } = { ...initialState, ...action }\n\n    let fakeWidth\n\n    if (mobile) {\n      if (phone) {\n        fakeWidth = breakPoints.phone\n      } else if (tablet) {\n        fakeWidth = breakPoints.tablet\n      } else {\n        // TODO - should we ever get here? default to the lowest value i guess\n        fakeWidth = breakPoints.phone\n      }\n    } else if (desktop) {\n      fakeWidth = breakPoints.tablet + 1\n    } else {\n      // nothing set, default to our defaultSize\n      fakeWidth = defaultSize\n    }\n\n    return { ...state, mobile, tablet, phone, desktop, fakeWidth }\n  }\n  default:\n    return state\n  }\n}\n"]}