{"version":3,"sources":["../src/redux.js"],"names":["breakPoints","defaultBreakPoints","get","SET_MOBILE_DETECT","setMobileDetect","phone","tablet","mobile","desktop","type","buildReducer","options","defaultSize","initialState","fakeWidth","state","action"],"mappings":";;AAAA,SAASA,eAAeC,kBAAxB,QAAkD,YAAlD;AACA,SAASC,GAAT,QAAoB,QAApB;;AAEA,IAAMC,oBAAoB,4CAA1B;;AAEA,OAAO,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,iFAAsC,EAAtC;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,MAAV,QAAUA,MAAV;AAAA,MAAkBC,MAAlB,QAAkBA,MAAlB;AAAA,MAA0BC,OAA1B,QAA0BA,OAA1B;;AAAA,SAA8C,EAAEC,MAAMN,iBAAR,EAA2BE,YAA3B,EAAkCC,cAAlC,EAA0CC,cAA1C,EAAkDC,gBAAlD,EAA9C;AAAA,CAAxB;;AAEP,OAAO,IAAME,eAAe,SAAfA,YAAe,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAC5C;AACA;AACA,MAAMX,cAAcE,IAAIS,OAAJ,EAAa,aAAb,EAA4BV,kBAA5B,CAApB;AACA,MAAMW,cAAcV,IAAIS,OAAJ,EAAa,aAAb,EAA4BV,mBAAmBK,MAAnB,GAA4B,CAAxD,CAApB;;AAEA,MAAMO,eAAe;AACnBR,WAAO,KADY;AAEnBC,YAAQ,KAFW;AAGnBC,YAAQ,KAHW;AAInBO,eAAWF;AAJQ,GAArB;;AAOA,SAAO,YAAkC;AAAA,QAAjCG,KAAiC,uEAAzBF,YAAyB;AAAA,QAAXG,MAAW;;AACvC,YAAQA,OAAOP,IAAf;AACE,WAAKN,iBAAL;AAAwB;AAAA,cACdI,MADc,GACqBS,MADrB,CACdT,MADc;AAAA,cACND,MADM,GACqBU,MADrB,CACNV,MADM;AAAA,cACED,KADF,GACqBW,MADrB,CACEX,KADF;AAAA,cACSG,OADT,GACqBQ,MADrB,CACSR,OADT;;;AAGtB,cAAIM,kBAAJ;AACA,cAAIP,MAAJ,EAAY;AACV,gBAAIF,KAAJ,EAAW;AACTS,0BAAYd,YAAYK,KAAxB;AACD,aAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBQ,0BAAad,YAAYM,MAAzB;AACD,aAFM,MAEA;AACL;AACAQ,0BAAYd,YAAYK,KAAxB;AACD;AACF,WATD,MASO;AACLS,wBAAYd,YAAYM,MAAZ,GAAqB,CAAjC;AACD;AACD,8BAAYS,KAAZ,IAAmBR,cAAnB,EAA2BD,cAA3B,EAAmCD,YAAnC,EAA0CG,gBAA1C,EAAmDM,oBAAnD;AACD;AACD;AACE,eAAOC,KAAP;AApBJ;AAsBD,GAvBD;AAwBD,CArCM","file":"redux.js","sourcesContent":["import { breakPoints as defaultBreakPoints } from './defaults'\nimport { get } from 'lodash'\n\nconst SET_MOBILE_DETECT = '@@react-responsive-redux/SET_MOBILE_DETECT'\n\nexport const setMobileDetect = ({ phone, tablet, mobile, desktop } = {}) => ({ type: SET_MOBILE_DETECT, phone, tablet, mobile, desktop })\n\nexport const buildReducer = (options = {}) => {\n  // ugh, babel is passing in undefined as an option here so we can't do destructuring in\n  // the function declaration\n  const breakPoints = get(options, 'breakPoints', defaultBreakPoints)\n  const defaultSize = get(options, 'defaultSize', defaultBreakPoints.tablet + 1)\n\n  const initialState = {\n    phone: false,\n    tablet: false,\n    mobile: false,\n    fakeWidth: defaultSize,\n  }\n\n  return (state = initialState, action) => {\n    switch (action.type) {\n      case SET_MOBILE_DETECT: {\n        const { mobile, tablet, phone, desktop } = action\n\n        let fakeWidth\n        if (mobile) {\n          if (phone) {\n            fakeWidth = breakPoints.phone\n          } else if (tablet) {\n            fakeWidth =  breakPoints.tablet\n          } else {\n            // TODO - should we ever get here? default to the lowest value i guess\n            fakeWidth = breakPoints.phone\n          }\n        } else {\n          fakeWidth = breakPoints.tablet + 1\n        }\n        return { ...state, mobile, tablet, phone, desktop, fakeWidth }\n      }\n      default:\n        return state\n    }\n  }\n}\n"]}